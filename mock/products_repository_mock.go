// Code generated by MockGen. DO NOT EDIT.
// Source: products_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	model "mutlicontainer/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockProductsRepository is a mock of ProductsRepository interface.
type MockProductsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockProductsRepositoryMockRecorder
}

// MockProductsRepositoryMockRecorder is the mock recorder for MockProductsRepository.
type MockProductsRepositoryMockRecorder struct {
	mock *MockProductsRepository
}

// NewMockProductsRepository creates a new mock instance.
func NewMockProductsRepository(ctrl *gomock.Controller) *MockProductsRepository {
	mock := &MockProductsRepository{ctrl: ctrl}
	mock.recorder = &MockProductsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductsRepository) EXPECT() *MockProductsRepositoryMockRecorder {
	return m.recorder
}

// CreateProduct mocks base method.
func (m *MockProductsRepository) CreateProduct(ctx echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProduct", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateProduct indicates an expected call of CreateProduct.
func (mr *MockProductsRepositoryMockRecorder) CreateProduct(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProduct", reflect.TypeOf((*MockProductsRepository)(nil).CreateProduct), ctx)
}

// GetDetails mocks base method.
func (m *MockProductsRepository) GetDetails(ctx echo.Context) (model.ProductDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDetails", ctx)
	ret0, _ := ret[0].(model.ProductDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDetails indicates an expected call of GetDetails.
func (mr *MockProductsRepositoryMockRecorder) GetDetails(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDetails", reflect.TypeOf((*MockProductsRepository)(nil).GetDetails), ctx)
}
